name: Dockerfiles
# Test and push dockerfiles when they change.
# Test for pull request, push dockerfiles when merged into main.
on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron: "0 0 1 * *"
  push:
    branches:
      - main
    paths:
      - "**.Dockerfile"
  pull_request:
  workflow_dispatch:

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: "3.x"
      - name: Verify dockerfiles
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          ./generate.py
          git diff --exit-code

  docker:
    needs: generate
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        docker_image:
          - "kinetic"
          - "melodic"
          - "noetic"
          - "dashing"
          - "foxy"
          - "gazebo9"
          - "gazebo11"
          - "citadel"
          - "dome"
          - "edifice"
          - "pages"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: "3.x"
      - name: Build Setup
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build 
        run: |
          ./build.py ${{ matrix.docker_image }}
      - name: Push
        if: github.ref == 'refs/heads/main'
        run: |
          ./build.py --push ${{ matrix.docker_image }}
        