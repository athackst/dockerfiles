# Generated by generate.py from templates.yml â€” DO NOT EDIT BY HAND.

variable "REGISTRY" { default = "althack" }

{# ---------- Targets and repo+name groups ---------- #} 
{% for repo, entries in settings.items() %}
  {% for entry in entries if include_eol or ('eol' not in entry) %}
    {% set name = entry['name'] %}
    {% set dockerfile_path = name ~ '.Dockerfile' %}
# ----------- targets for {{repo}}-{{name}} -----------
    {# targets for each stage #}
    {% for t in entry['targets'] %}
      {% set stage = t['target'] %}
      {% set target_name = repo ~ '-' ~ name ~ '-' ~ stage %}

target "{{ target_name }}" {
  context    = "{{ repo }}"
  dockerfile = "{{ dockerfile_path }}"
  target     = "{{ stage }}"
  tags       = [
    "${REGISTRY}/{{ repo }}:{{ name }}-{{ stage }}",
  ]
}
    {% endfor %}

# ---- group for all {{repo}}-{{name}}  ----
group "{{ repo }}-{{ name }}" {
  targets = [
    {%- for t in entry['targets'] -%}
      "{{ repo }}-{{ name }}-{{ t['target'] }}"{% if not loop.last %}, {% endif %}
    {%- endfor -%}
  ]
}

  {% endfor %}
{% endfor %}

# ---------- Parent-platform groups per entry (os/arch; variant-agnostic) ---------- #
{%- for repo, entries in settings.items() %}
  {%- for entry in entries if include_eol or ('eol' not in entry) %}
    {%- set name = entry['name'] %}

    {# Collect unique parent platforms (os/arch) for this entry #}
    {%- set parents = [] %}
    {%- for t in entry['targets'] %}
      {%- for raw in t['platforms'].split(',') %}
        {%- set tok = raw.strip() | lower %}
        {%- set parts = tok.split('/') %}
        {%- if parts|length >= 2 %}
          {%- set parent = parts[0] ~ '/' ~ parts[1] %}
          {%- if parent not in parents %}
            {%- set _ = parents.append(parent) %}
          {%- endif %}
        {%- endif %}
      {%- endfor %}
    {%- endfor %}

    {# For each parent platform, include only the targets that support it (exact or any variant) #}
    {%- for parent in parents %}
      {%- set parent_key = parent.replace('/', '-') %}
      {%- set tgtlist = [] %}
      {%- for t in entry['targets'] %}
        {%- set plats = (t['platforms'] | lower) %}
        {%- if (parent in plats) or ((parent ~ '/') in plats) %}
          {%- set _ = tgtlist.append(repo ~ '-' ~ name ~ '-' ~ t['target']) %}
        {%- endif %}
      {%- endfor %}
      {% if tgtlist %}
group "{{ repo }}-{{ name }}-{{ parent_key }}" { targets = [ {{ tgtlist | map('tojson') | join(', ') }} ] }
      {% endif %}
    {%- endfor %}

  {%- endfor %}
{%- endfor %}


# ---------- Family-level groups (e.g., ros2, gz, ignition) ----------

{% for repo, entries in settings.items() %}
  {%- set repo_targets = [] %}
  {%- for entry in entries if include_eol or ('eol' not in entry) %}
    {%- for t in entry['targets'] %}
      {%- set _ = repo_targets.append(repo ~ '-' ~ entry['name'] ~ '-' ~ t['target']) %}
    {%- endfor %}
  {%- endfor %}
group "{{ repo }}" { targets = [ {{ repo_targets | map('tojson') | join(', ') }} ] }
{% endfor %}

# ---- all non-EOL ----
group "default" {
  targets = [
    {% set all_targets = [] %}
    {% for repo, entries in settings.items() %}
      {% for entry in entries if include_eol or ('eol' not in entry) %}
        {% for t in entry['targets'] %}
          {% set _ = all_targets.append(repo ~ '-' ~ entry['name'] ~ '-' ~ t['target']) %}
        {% endfor %}
      {% endfor %}
    {% endfor %}
    {{ all_targets | map('tojson') | join(', ') }}
  ]
}
